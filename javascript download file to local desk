function downloadFunction() {
            document.getElementById('downloadBtn').innerHTML = "Preparing Download...";            
            var token_id = window.sessionStorage.getItem("Token_ID");
            var file_id = window.sessionStorage.getItem("file_id");
            var file_name = window.sessionStorage.getItem("file_name");
            var Data = { "tokenID": token_id, "fileID": file_id };
            var URL = "/Convert3D/DownloadEOP";

            $.ajax({
                type: "POST",
                url: URL,
                data: Data,
                success: function (data) {
                    var a = document.createElement('a');
                    var blob = base64toBlob(data);
                    var url = window.URL.createObjectURL(blob);
                    a.href = url;
                    a.download = file_name;
                    a.click();
                    window.URL.revokeObjectURL(url);
                    $('#LoginBtn').prop("disabled", true);
                    $('#LoginBtn').removeAttr("disabled");
                },
                fail: function () {
                    alert("ajax fail");
                },
                error: function () {
                    alert("ajax error");
                }
            });
            document.getElementById('downloadBtn').innerHTML = "Download Converted Asset"; 
        }
        
        
        
        function base64toBlob(base64Data, contentType) {
            contentType = contentType || '';
            var sliceSize = 1024;
            var byteCharacters = atob(base64Data);
            var bytesLength = byteCharacters.length;
            var slicesCount = Math.ceil(bytesLength / sliceSize);
            var byteArrays = new Array(slicesCount);

            for (var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {
                var begin = sliceIndex * sliceSize;
                var end = Math.min(begin + sliceSize, bytesLength);

                var bytes = new Array(end - begin);
                for (var offset = begin, i = 0; offset < end; ++i, ++offset) {
                    bytes[i] = byteCharacters[offset].charCodeAt(0);
                }
                byteArrays[sliceIndex] = new Uint8Array(bytes);
            }
            return new Blob(byteArrays, { type: contentType });
        }
